{"version":3,"file":"static/js/253.1567687d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Contacts/contacts.module.css?1e09","store/contacts/contactsSelectors.js","store/filter/filterSelector.js","components/Contacts/Contacts.jsx","webpack://react-homework-template/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Phonebook/phonebook.module.css?5245","components/Phonebook/Phonebook.jsx","webpack://react-homework-template/./src/Pages/ContactsPart/contactsPart.module.css?e644","Pages/ContactsPart/ContactsPart.jsx","components/Loader/Loader.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contacts_list__QBWBd\",\"item\":\"contacts_item__82PmL\",\"button\":\"contacts_button__3-8cg\"};","export const contactsSelector = state => {\n  return state.contacts;\n};","export const filterSelector = state => {\n  return state.filter;\n};\n","import toast from 'react-hot-toast';\nimport css from './contacts.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactsThunk } from 'store/contacts/contactThunk';\nimport { contactsSelector } from 'store/contacts/contactsSelectors';\nimport { filterSelector } from 'store/filter/filterSelector';\n\nconst Contacts = () => {\n  const { contacts } = useSelector(contactsSelector);\n  const { filter } = useSelector(filterSelector);\n\n  const dispatch = useDispatch();\n\n  const handleClick = e => {\n    dispatch(deleteContactsThunk(e.target.id));\n    toast.success(' Contact deleted!');\n  };\n\n  const filtered = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLocaleLowerCase())\n  );\n\n  const elements = filtered.map(({ name, number, id }) => (\n    <li className={css.item} key={id}>\n      {name} : {number}\n      <button\n        className={css.button}\n        id={id}\n        type=\"button\"\n        onClick={handleClick}\n      >\n        Delete\n      </button>\n    </li>\n  ));\n  return (\n    <>\n      <ul className={css.list}>{elements}</ul>\n    </>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"filter_input__sX944\",\"inputContainer\":\"filter_inputContainer__DyZl6\"};","import css from './filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterSelector } from 'store/filter/filterSelector';\nimport { filterValue } from 'store/filter/filterSlice';\n\nconst Filter = () => {\n  const { filter } = useSelector(filterSelector);\n  const dispatch = useDispatch();\n\n const handleFilter = ({ target }) => {\n   dispatch(filterValue(target.value));\n };\n\n  return (\n    <div className={css.inputContainer}>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        className={css.input}\n        value={filter}\n        onChange={handleFilter}\n        placeholder=\"Write name\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"phonebook_form__i7pVp\",\"titleSmall\":\"phonebook_titleSmall__9YgyT\",\"input\":\"phonebook_input__VJNdZ\",\"button\":\"phonebook_button__Eyg+r\"};","import { useState } from 'react';\nimport css from './phonebook.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { createContactsThunk } from 'store/contacts/contactThunk';\nimport toast from 'react-hot-toast';\nimport { contactsSelector } from 'store/contacts/contactsSelectors';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n\n  const { contacts } = useSelector(contactsSelector);\n\n  const [info, setInfo] = useState({ name: '', number: '' });\n  const { name, number } = info;\n\n  const handleChange = ({ target }) => {\n    setInfo({\n      ...info,\n      [target.name]: target.value,\n    });\n  };\n\n  const getInfo = e => {\n    e.preventDefault();\n    const includeName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase().trim()\n    );\n    if (includeName) {\n     return toast.error(`${name} is already in contacts`);\n    } else {\n      dispatch(createContactsThunk({ name: name.trim(), number: number }));\n    }\n    setInfo({\n      name: '',\n      number: '',\n    });\n    toast.success('Created a new contact');\n  };\n\n  return (\n    <form className={css.form} onSubmit={getInfo}>\n      <label className={css.titleSmall} htmlFor=\"name\">\n        Name\n      </label>\n      <input\n        className={css.input}\n        type=\"text\"\n        id=\"name\"\n        name=\"name\"\n        required\n        value={name}\n        onChange={handleChange}\n      />\n      <label className={css.titleSmall} htmlFor=\"number\">\n        Number\n      </label>\n      <input\n        className={css.input}\n        type=\"tel\"\n        name=\"number\"\n        id=\"number\"\n        required\n        value={number}\n        onChange={handleChange}\n      />\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Phonebook;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"contactsPart_title__LaVzK\",\"titleEmpty\":\"contactsPart_titleEmpty__cKo1M\",\"mainPart\":\"contactsPart_mainPart__xQ0CG\",\"formPart\":\"contactsPart_formPart__lhXGV\",\"contactsPart\":\"contactsPart_contactsPart__PgcaP\"};","import Contacts from 'components/Contacts/Contacts';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport Phonebook from 'components/Phonebook/Phonebook';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContactsThunk } from 'store/contacts/contactThunk';\nimport { contactsSelector } from 'store/contacts/contactsSelectors';\nimport css from './contactsPart.module.css';\n\nfunction ContactsPart() {\n  const { contacts, error, isLoading } = useSelector(contactsSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n  \n  return (\n    <div className=\"container\">\n      {isLoading && <Loader />}\n      <div className={css.mainPart}>\n        <div className={css.formPart}>\n          <h1 className={css.title}>Phonebook</h1>\n          <Phonebook />\n        </div>\n        <div className={css.contactsPart}>\n          {!isLoading && contacts && contacts.length === 0 && (\n            <h2 className={css.titleEmpty}>The contact list is empty...</h2>\n          )}\n          {contacts.length > 0 && (\n            <>\n              <h2 className={css.title}>Contacts</h2>\n              <Filter />\n              <Contacts />\n            </>\n          )}\n        </div>\n        {error && <div>{error}</div>}\n      </div>\n    </div>\n  );\n}\n\nexport default ContactsPart;\n","import { Circles } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div className=\"loaderStyle\">\n      <Circles\n        height=\"80\"\n        width=\"80\"\n        color=\"#d3d2d2\"\n        ariaLabel=\"circles-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n"],"names":["contactsSelector","state","contacts","filterSelector","filter","useSelector","dispatch","useDispatch","handleClick","e","deleteContactsThunk","target","id","toast","elements","contact","name","toLowerCase","includes","toLocaleLowerCase","map","_ref","number","_jsxs","className","css","children","_jsx","type","onClick","_Fragment","value","onChange","filterValue","placeholder","_useState","useState","_useState2","_slicedToArray","info","setInfo","handleChange","_objectSpread","_defineProperty","onSubmit","preventDefault","some","trim","concat","createContactsThunk","htmlFor","required","_useSelector","error","isLoading","useEffect","getContactsThunk","Loader","Phonebook","length","Filter","Contacts","Circles","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible"],"sourceRoot":""}